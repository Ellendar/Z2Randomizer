<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
             xmlns:converters="using:CrossPlatformUI.Converters"
             xmlns:rc="clr-namespace:Z2Randomizer.RandomizerCore;assembly=RandomizerCore"
             xmlns:ui="clr-namespace:CrossPlatformUI"
             xmlns:vm="clr-namespace:CrossPlatformUI.ViewModels"
             xmlns:lang="clr-namespace:Z2Randomizer.CrossPlatformUI.Lang"
             mc:Ignorable="d" d:DesignWidth="900" d:DesignHeight="600"
             x:DataType="vm:MainViewModel"
             x:Class="CrossPlatformUI.Views.Tabs.LevelsView">
    <Grid ColumnDefinitions="*,*">
        <StackPanel Grid.Column="0">
            <CheckBox IsChecked="{Binding ShuffleAllExpState}"
                      Content="Shuffle All Experience">
                <ToolTip.Tip><TextBlock Text="{x:Static lang:Resources.ShuffleAllExperienceToolTip}"/></ToolTip.Tip>
            </CheckBox>
            <Border BorderBrush="{DynamicResource MaterialPrimaryForegroundBrush}"
                    BorderThickness="1" Padding="20 8" CornerRadius="4">
                <UniformGrid Rows="0" Columns="1" RowSpacing="8">
                    <CheckBox
                        Name="AtkExp"
                        IsEnabled="{Binding !ShuffleAllExpState}"
                        IsChecked="{Binding Config.ShuffleAttackExperience}"
                        Content="Shuffle Attack Experience"
                    />
                    <CheckBox
                        Name="MagExp"
                        IsEnabled="{Binding !ShuffleAllExpState}"
                        IsChecked="{Binding Config.ShuffleMagicExperience}"
                        Content="Shuffle Magic Experience"
                    />
                    <CheckBox
                        Name="LifExp"
                        IsEnabled="{Binding !ShuffleAllExpState}"
                        IsChecked="{Binding Config.ShuffleLifeExperience}"
                        Content="Shuffle Life Experience"
                    />
                </UniformGrid>
            </Border>

            <StackPanel Margin="0 16" HorizontalAlignment="Left">
                <TextBlock>Level Cap</TextBlock>
                <ToolTip.Tip><TextBlock Text="{x:Static lang:Resources.LevelCapToolTip}"/></ToolTip.Tip>
                <Grid ColumnDefinitions="72,72,72" ColumnSpacing="8" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <NumericUpDown Grid.Column="0"
                                   Height="72"
                                   Name="AttackLevelCapSelector" Value="{Binding Config.AttackLevelCap}"
                                   FormatString="N0" ParsingNumberStyle="Integer"
                                   ClipValueToMinMax="True" Minimum="1" Maximum="8" assists:TextFieldAssist.Hints="Attack"/>
                    <NumericUpDown Grid.Column="1"
                                   Height="72"
                                   Name="MagicLevelCapSelector" Value="{Binding Config.MagicLevelCap}"
                                   FormatString="N0" ParsingNumberStyle="Integer"
                                   ClipValueToMinMax="True" Minimum="1" Maximum="8" assists:TextFieldAssist.Hints="Magic"/>
                    <NumericUpDown Grid.Column="2"
                                   Height="72"
                                   Name="LifeLevelCapSelector" Value="{Binding Config.LifeLevelCap}"
                                   FormatString="N0" ParsingNumberStyle="Integer"
                                   ClipValueToMinMax="True" Minimum="1" Maximum="8" assists:TextFieldAssist.Hints="Life"/>
                </Grid>
            </StackPanel>

            <CheckBox
                Content="Scale Level Requirements to Cap"
            >
                <ToolTip.Tip><TextBlock Text="{x:Static lang:Resources.ScaleLevelRequirementstoCapToolTip}"/></ToolTip.Tip>
                <CheckBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource SumOfValuesLessThanConverter}" ConverterParameter="24">
                        <Binding Path="#AttackLevelCapSelector.Value" />
                        <Binding Path="#MagicLevelCapSelector.Value" />
                        <Binding Path="#LifeLevelCapSelector.Value" />
                    </MultiBinding>
                </CheckBox.IsEnabled>
            </CheckBox>
        </StackPanel>
        <StackPanel Grid.Column="1">
            <ComboBox
                Theme="{StaticResource MaterialOutlineComboBox}"
                assists:ComboBoxAssist.Label="Attack Effectiveness"
                ItemsSource="{Binding Source={x:Static rc:Enums.AttackEffectivenessList}}"
                SelectedItem="{Binding Config.AttackEffectiveness, Converter={x:Static ui:Util.EnumConvert}}"
            >
                <ToolTip.Tip><TextBlock Text="{x:Static lang:Resources.AttackEffectivenessToolTip}"/></ToolTip.Tip>
            </ComboBox>
            <ComboBox
                Theme="{StaticResource MaterialOutlineComboBox}"
                assists:ComboBoxAssist.Label="Magic Effectiveness"
                ItemsSource="{Binding Source={x:Static rc:Enums.MagicEffectivenessList}}"
                SelectedItem="{Binding Config.MagicEffectiveness, Converter={x:Static ui:Util.EnumConvert}}"
            >
                <ToolTip.Tip><TextBlock Text="{x:Static lang:Resources.MagicEffectivenessToolTip}"/></ToolTip.Tip>
            </ComboBox>
            <ComboBox
                Theme="{StaticResource MaterialOutlineComboBox}"
                assists:ComboBoxAssist.Label="Life Effectiveness"
                ItemsSource="{Binding Source={x:Static rc:Enums.LifeEffectivenessList}}"
                SelectedItem="{Binding Config.LifeEffectiveness, Converter={x:Static ui:Util.EnumConvert}}"
            >
                <ToolTip.Tip><TextBlock Text="{x:Static lang:Resources.LifeEffectivenessToolTip}"/></ToolTip.Tip>
            </ComboBox>
        </StackPanel>
    </Grid>
</UserControl>
