<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
             xmlns:converters="using:CrossPlatformUI.Converters"
             xmlns:rc="clr-namespace:RandomizerCore;assembly=RandomizerCore"
             xmlns:ui="clr-namespace:CrossPlatformUI"
             xmlns:vm="clr-namespace:CrossPlatformUI.ViewModels"
             mc:Ignorable="d" d:DesignWidth="900" d:DesignHeight="600"
             x:DataType="vm:MainViewModel"
             x:Class="CrossPlatformUI.Views.Tabs.LevelsView">
    <Grid ColumnDefinitions="*,*">
        <StackPanel>
            <CheckBox IsChecked="{Binding ShuffleAllExpState}"
                      Content="Shuffle All Experience"/>
            <Border BorderBrush="{DynamicResource MaterialPrimaryForegroundBrush}" CornerRadius="4" BorderThickness="1">
                <StackPanel>
                    <CheckBox Name="AtkExp"
                              IsEnabled="{Binding !ShuffleAllExpState}"
                              IsChecked="{Binding Config.ShuffleAttackExperience}"
                              Content="Shuffle Attack Experience" />
                    <CheckBox Name="MagExp"
                              IsEnabled="{Binding !ShuffleAllExpState}"
                              IsChecked="{Binding Config.ShuffleMagicExperience}"
                              Content="Shuffle Magic Experience" />
                    <CheckBox Name="LifExp"
                              IsEnabled="{Binding !ShuffleAllExpState}"
                              IsChecked="{Binding Config.ShuffleLifeExperience}"
                              Content="Shuffle Life Experience" />
                </StackPanel>
            </Border>
            
            <TextBlock HorizontalAlignment="Center">Level Cap</TextBlock>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <NumericUpDown Name="AttackLevelCapSelector" Value="{Binding Config.AttackLevelCap}"
                               FormatString="N0" ParsingNumberStyle="Integer"
                               ClipValueToMinMax="True" Minimum="1" Maximum="8" assists:TextFieldAssist.Hints="Attack"/>
                <NumericUpDown Name="MagicLevelCapSelector" Value="{Binding Config.MagicLevelCap}"
                               FormatString="N0" ParsingNumberStyle="Integer"
                               ClipValueToMinMax="True" Minimum="1" Maximum="8" assists:TextFieldAssist.Hints="Magic"/>
                <NumericUpDown Name="LifeLevelCapSelector" Value="{Binding Config.LifeLevelCap}"
                               FormatString="N0" ParsingNumberStyle="Integer"
                               ClipValueToMinMax="True" Minimum="1" Maximum="8" assists:TextFieldAssist.Hints="Life"/>
            </StackPanel>

            <CheckBox Content="Scale Level Requirements To Cap">
              <CheckBox.IsEnabled>
                <MultiBinding Converter="{StaticResource SumOfValuesLessThanConverter}" ConverterParameter="24">
                  <Binding Path="#AttackLevelCapSelector.Value" />
                  <Binding Path="#MagicLevelCapSelector.Value" />
                  <Binding Path="#LifeLevelCapSelector.Value" />
                </MultiBinding>
              </CheckBox.IsEnabled>
            </CheckBox>
            
        </StackPanel>
        <StackPanel Grid.Column="1">
            <ComboBox assists:ComboBoxAssist.Label="Attack Effectiveness" Theme="{StaticResource MaterialOutlineComboBox}"
                      ItemsSource="{Binding Source={x:Static rc:Enums.AttackEffectivenessList}}"
                      SelectedItem="{Binding Config.AttackEffectiveness, Converter={x:Static ui:Util.EnumConvert}}" />
            <ComboBox assists:ComboBoxAssist.Label="Magic Effectiveness" Theme="{StaticResource MaterialOutlineComboBox}"
                      ItemsSource="{Binding Source={x:Static rc:Enums.MagicEffectivenessList}}"
                      SelectedItem="{Binding Config.MagicEffectiveness, Converter={x:Static ui:Util.EnumConvert}}" />
            <ComboBox assists:ComboBoxAssist.Label="Life Effectiveness" Theme="{StaticResource MaterialOutlineComboBox}"
                      ItemsSource="{Binding Source={x:Static rc:Enums.LifeEffectivenessList}}"
                      SelectedItem="{Binding Config.LifeEffectiveness, Converter={x:Static ui:Util.EnumConvert}}" />
        </StackPanel>
    </Grid>
</UserControl>
